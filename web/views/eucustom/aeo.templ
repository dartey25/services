package eucustom

import (
	c "github.com/mdoffice/md-services/web/views/component"
	"github.com/mdoffice/md-services/web/views/component/form"
	"github.com/mdoffice/md-services/web/views/search"
	"strings"
	"fmt"
	"github.com/mdoffice/md-services/internal/eucustoms/model"
)

templ AeoTab(props AeoFormProps) {
	<div hx-swap-oob="innerHTML:#main-header>span">Уповноважені економічні оператори</div>
	<div hx-swap-oob="innerHTML:#main-description">Пошук по базі даних операторів</div>
	@c.TabList() {
		@c.TabItem(c.TabItemProps{Text: "AEO", ContentLink: "/services/eucustom/aeo", IsActive: true})
		@c.TabItem(c.TabItemProps{Text: "EORI", ContentLink: "/services/eucustom/eori"})
	}
	<div id="tab-content" role="tabpanel" hx-swap-oob="outerHTML">
		@AeoForm(props)
	</div>
}

type AeoFormProps struct {
	Holder      string
	Country     string
	Types       []model.AeoType
	CountryList []string
}

templ AeoForm(props AeoFormProps) {
	<form
		id="search-form"
		hx-get="/services/eucustom/aeo/data"
		hx-target="#results-body"
		hx-target-*="#results-body"
		hx-indicator="#loading-indicator,#results-body, #results-footer"
		hx-on::before-request={ search.ShowResults() }
		hx-disabled-elt="this"
	>
		@form.Group() {
			@form.Label("Власник уповноваження")
			@form.Input(form.InputProps{Name: "holder", Value: props.Holder})
		}
		@form.Group() {
			@form.Label("Країна видачі")
			<div class="col-sm-4">
				<select id="country-select" class="form-control" name="country">
					for _, country := range props.CountryList {
						if country == props.Country {
							<option value={ country } selected>{ country }</option>
						} else {
							<option value={ country }>{ country }</option>
						}
					}
				</select>
			</div>
		}
		@form.Group() {
			@form.Label("Тип уповноваження")
			@c.Column(c.GridProps{ClassName: "col-sm-9"}) {
				for _, t :=range props.Types {
					@form.Checkbox(form.CheckboxProps{
						Name:      "type",
						Value:     t.Code,
						IsChecked: t.Checked,
						Label:     fmt.Sprintf("%s - %s", strings.ToUpper(t.Code), t.Description)})
				}
			}
		}
		@form.BtnGroup(form.BtnGroupProps{Buttons: []templ.Component{
			c.Button(c.ButtonProps{
				Text: "Знайти", Variant: "primary", Type: "submit", Icon: "search4", ClassName: "mr-2"}),
			c.Button(c.ButtonProps{Text: "Очистити", Variant: "light", OnClick: resetForm("#search-form")}),
		}})
	</form>
}

script resetForm(selector string) {
event.preventDefault()
htmx.find(selector).reset()
htmx.addClass(htmx.find("#results"), "d-none")
}

templ resultItem(index int, item model.AeoData, query string) {
	@search.ResultMedia(search.ResultMediaProps{Index: index, Rows: []templ.Component{
		search.ResultRow(search.ResultRowProps{Label: "Власник", Component: search.HighlightedText(item.Holder, query)}),
		search.ResultRow(search.ResultRowProps{Label: "Країна видачі", Text: item.IssCountry}),
		search.ResultRow(search.ResultRowProps{Label: "Митниця",
			Component: c.Link(c.LinkProps{
				Href: fmt.Sprintf("https://ec.europa.eu/taxation_customs/dds2/rd/rd_details.jsp?Lang=EN&DesLang=EN&RefNum=%s",
					item.CusCode),
				Text:   item.CusCode,
				Target: "_blank"})}),
		search.ResultRow(search.ResultRowProps{Label: "Тип уповноваження", Text: item.AuthType}),
		search.ResultRow(search.ResultRowProps{Label: "Дата видачі", Text: item.EffDate}),
	},
	})
}

templ AeoResults(data *model.AeoPaginatedData) {
	@search.ResultTotalCounter(data.TotalItems, templ.Attributes{"hx-swap-oob": "outerHTML"})
	@search.ResultMediaList() {
		for index, item := range data.Data {
			@resultItem((data.Page-1)*data.Limit+index+1, item, data.Query)
		}
	}
	@search.ResultFooter() {
		if data.TotalPages > data.Page {
			@search.ShowMoreBtn(templ.Attributes{
				"hx-get":       fmt.Sprintf("/services/eucustom/aeo/data?page=%d", data.Page+1),
				"hx-target":    "#results-body",
				"hx-target-*":  "#results-body",
				"hx-include":   "#search-form",
				"hx-swap":      "beforeend",
				"hx-indicator": "#loading-indicator",
			})
		}
	}
}
