package eucustom

import (
	c "github.com/mdoffice/md-services/web/views/component"
	"github.com/mdoffice/md-services/web/views/component/form"
	"github.com/mdoffice/md-services/web/views/search"
	"strings"
	"fmt"
	"github.com/mdoffice/md-services/pkg/eucustoms/model"
)

templ AeoTabList() {
	@c.TabList() {
		@c.TabItem(c.TabItemProps{Text: "AEO", ContentLink: "/services/eucustom/aeo", IsActive: true})
		@c.TabItem(c.TabItemProps{Text: "EORI", ContentLink: "/services/eucustom/eori"})
	}
}

templ AeoHeader() {
	Авторизовані економічні оператори
	@c.SocialButtons("/eucustom/")
}

templ AeoTab(props AeoFormProps) {
	<div hx-swap-oob="innerHTML:#main-header>span">
		Авторизовані економічні оператори
		@c.SocialButtons("")
	</div>
	<div hx-swap-oob="innerHTML:#main-description">Пошук по базі даних операторів</div>
	@AeoTabList()
	<div id="tab-content" role="tabpanel" hx-swap-oob="outerHTML">
		@AeoForm(props)
	</div>
}

templ AeoResultTableHeader() {
	<tr>
		<th>№</th>
		<th>Власник</th>
		<th>Країна</th>
		<th>Митниця</th>
		<th>Тип</th>
		<th>Дата видачі</th>
	</tr>
}

type AeoFormProps struct {
	Holder      string
	Country     string
	Types       []*model.AeoType
	CountryList []string
}

templ AeoForm(props AeoFormProps) {
	<form
		id="search-form"
		hx-get="/services/eucustom/aeo/data"
		hx-swap="innerHTML"
		hx-target="#results-body"
		hx-target-*="#results-body"
		hx-indicator="#loading-indicator,#results-body, #results-footer"
		hx-on::before-request={ search.ShowResults() }
		hx-disabled-elt="this"
		hx-disinherit="*"
	>
		@form.Group() {
			@form.Label("Власник уповноваження")
			@form.Input(form.InputProps{Name: "holder", Value: props.Holder})
		}
		@form.Group() {
			@form.Label("Країна видачі")
			<div class="col-sm-4">
				<select id="country-select" class="form-control" name="country">
					for _, country := range props.CountryList {
						if country == props.Country {
							<option value={ country } selected>{ country }</option>
						} else {
							<option value={ country }>{ country }</option>
						}
					}
				</select>
			</div>
		}
		@form.Group() {
			@form.Label("Тип уповноваження")
			@c.Row(c.GridProps{ClassName: "col-sm-4"}) {
				for _, t :=range props.Types {
					@form.Checkbox(form.CheckboxProps{
						Name:      "type",
						Value:     t.Code,
						IsChecked: t.Checked,
						Label:     strings.ToUpper(t.Code),
						Title:     t.Description,
						ClassName: "col-sm-1 ml-2 mt-0"})
				}
			}
		}
		@form.BtnGroup(form.BtnGroupProps{Buttons: []templ.Component{
			c.Button(c.ButtonProps{
				Text: "Знайти", Variant: "primary", Type: "submit", Icon: "search4", ClassName: "mr-2"}),
			c.ButtonLink(c.ButtonLinkProps{
				Text:           "Очистити",
				Variant:        "light",
				Href:           "/services/eucustom/",
				PreventDefault: true,
				Attributes:     templ.Attributes{"hx-boost": "true", "hx-target": "body"}}),
		}})
	</form>
}

templ resultTableItem(index int, item model.AeoData) {
	@search.ResultTableRow(index) {
		@search.ResultTableCol(search.ResultTableColProps{Component: search.HighlightedText(item.HolderHighlight, item.Holder)})
		@search.ResultTableCol(search.ResultTableColProps{Text: item.IssCountry})
		@search.ResultTableCol(search.ResultTableColProps{Component: c.Link(c.LinkProps{
			Href: fmt.Sprintf("https://ec.europa.eu/taxation_customs/dds2/rd/rd_details.jsp?Lang=EN&DesLang=EN&RefNum=%s",
				item.CusCode),
			Text:   item.CusCode,
			Target: "_blank"})})
		@search.ResultTableCol(search.ResultTableColProps{Text: item.AuthType[:strings.Index(item.AuthType, "-")-1]})
		@search.ResultTableCol(search.ResultTableColProps{Text: item.EffDate})
	}
}

templ AeoResults(data *model.AeoPaginatedData) {
	if data.Page == 1 {
		<table class="table">
			<thead>
				@AeoResultTableHeader()
			</thead>
			<tbody>
				for index, item := range data.Data {
					@resultTableItem((data.Page-1)*data.Limit+index+1, item)
				}
			</tbody>
		</table>
	} else {
		<tbody hx-swap-oob="beforeend:#results-body tbody">
			for index, item := range data.Data {
				@resultTableItem((data.Page-1)*data.Limit+index+1, item)
			}
		</tbody>
	}
	@search.ResultTotalCounter(data.TotalItems, templ.Attributes{"hx-swap-oob": "outerHTML"})
	@search.ResultFooter(data.TotalPages > data.Page) {
		if data.TotalPages > data.Page {
			@search.ShowMoreBtn(templ.Attributes{
				"hx-get":       fmt.Sprintf("/services/eucustom/aeo/data?page=%d", data.Page+1),
				"hx-target-*":  "#results-body",
				"hx-include":   "#search-form",
				"hx-swap":      "none",
				"hx-indicator": "#loading-indicator",
			})
		}
	}
}
